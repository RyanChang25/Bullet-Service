-->>: System is used in conjunction with Knit
-- (Knit is not required for this to work)

local Knit = require(game:GetService("ReplicatedStorage").Packages.Knit)
local CollectionService = game:GetService("CollectionService")

-- Create the service:
local ProjectileService = Knit.CreateService {
	Name = "ProjectileService";
	Client = {RenderSignal = Knit.CreateSignal(), BloodSignal = Knit.CreateSignal()};
}

function ProjectileService.Client:BulletRender(plr, HRP, torso, gunType, attachment)
	plr.Character.Primary.Handle[attachment].FlashFX:Emit(15)
	plr.Character.Primary.Handle[attachment].OverHeat:Emit(75)
	plr.Character.Primary.Handle.Gun:Play()
	Knit.GetService('ProjectileService').Client.RenderSignal:FireAll(plr, HRP, torso, gunType) -- Bullet
end

function ProjectileService.Client:DamageReplication(plr, hit, damage)
	if hit ~= nil and hit.Parent ~= nil and hit.Parent:FindFirstChild("Humanoid") and CollectionService:HasTag(hit.Parent, "Zombie") then
		hit.Parent:FindFirstChild("Humanoid"):TakeDamage(damage)
	end
end

function ProjectileService:KnitInit()
end

function ProjectileService:KnitStart()	
end

return ProjectileService
